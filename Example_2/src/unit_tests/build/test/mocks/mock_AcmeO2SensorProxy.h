/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ACMEO2SENSORPROXY_H
#define _MOCK_ACMEO2SENSORPROXY_H

#include "unity.h"
#include "AcmeO2SensorProxy.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_AcmeO2SensorProxy_Init(void);
void mock_AcmeO2SensorProxy_Destroy(void);
void mock_AcmeO2SensorProxy_Verify(void);




#define getO2Conc_IgnoreAndReturn(cmock_retval) getO2Conc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void getO2Conc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int cmock_to_return);
#define getO2Conc_StopIgnore() getO2Conc_CMockStopIgnore()
void getO2Conc_CMockStopIgnore(void);
#define getO2Conc_ExpectAndReturn(cmock_retval) getO2Conc_CMockExpectAndReturn(__LINE__, cmock_retval)
void getO2Conc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int cmock_to_return);
typedef unsigned int (* CMOCK_getO2Conc_CALLBACK)(int cmock_num_calls);
void getO2Conc_AddCallback(CMOCK_getO2Conc_CALLBACK Callback);
void getO2Conc_Stub(CMOCK_getO2Conc_CALLBACK Callback);
#define getO2Conc_StubWithCallback getO2Conc_Stub
#define getO2Flow_IgnoreAndReturn(cmock_retval) getO2Flow_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void getO2Flow_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned long cmock_to_return);
#define getO2Flow_StopIgnore() getO2Flow_CMockStopIgnore()
void getO2Flow_CMockStopIgnore(void);
#define getO2Flow_ExpectAndReturn(cmock_retval) getO2Flow_CMockExpectAndReturn(__LINE__, cmock_retval)
void getO2Flow_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned long cmock_to_return);
typedef unsigned long (* CMOCK_getO2Flow_CALLBACK)(int cmock_num_calls);
void getO2Flow_AddCallback(CMOCK_getO2Flow_CALLBACK Callback);
void getO2Flow_Stub(CMOCK_getO2Flow_CALLBACK Callback);
#define getO2Flow_StubWithCallback getO2Flow_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
